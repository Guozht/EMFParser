#pragma once
#include "EMFParser.h"
#pragma warning(disable:4200)
class FileFormatParser : public IEMFParser {
  public:
    FileFormatParser(const std::wstring &file_name);
    ~FileFormatParser();

    virtual const std::wstring GetText() override;

  private:
    std::wstring text_;
};

//与windows wingdi.h定义保持一致
typedef enum {
    M_EMR_HEADER = 0x00000001,
    M_EMR_POLYBEZIER = 0x00000002,
    M_EMR_POLYGON = 0x00000003,
    M_EMR_POLYLINE = 0x00000004,
    M_EMR_POLYBEZIERTO = 0x00000005,
    M_EMR_POLYLINETO = 0x00000006,
    M_EMR_POLYPOLYLINE = 0x00000007,
    M_EMR_POLYPOLYGON = 0x00000008,
    M_EMR_SETWINDOWEXTEX = 0x00000009,
    M_EMR_SETWINDOWORGEX = 0x0000000A,
    M_EMR_SETVIEWPORTEXTEX = 0x0000000B,
    M_EMR_SETVIEWPORTORGEX = 0x0000000C,
    M_EMR_SETBRUSHORGEX = 0x0000000D,
    M_EMR_EOF = 0x0000000E,
    M_EMR_SETPIXELV = 0x0000000F,
    M_EMR_SETMAPPERFLAGS = 0x00000010,
    M_EMR_SETMAPMODE = 0x00000011,
    M_EMR_SETBKMODE = 0x00000012,
    M_EMR_SETPOLYFILLMODE = 0x00000013,
    M_EMR_SETROP2 = 0x00000014,
    M_EMR_SETSTRETCHBLTMODE = 0x00000015,
    M_EMR_SETTEXTALIGN = 0x00000016,
    M_EMR_SETCOLORADJUSTMENT = 0x00000017,
    M_EMR_SETTEXTCOLOR = 0x00000018,
    M_EMR_SETBKCOLOR = 0x00000019,
    M_EMR_OFFSETCLIPRGN = 0x0000001A,
    M_EMR_MOVETOEX = 0x0000001B,
    M_EMR_SETMETARGN = 0x0000001C,
    M_EMR_EXCLUDECLIPRECT = 0x0000001D,
    M_EMR_INTERSECTCLIPRECT = 0x0000001E,
    M_EMR_SCALEVIEWPORTEXTEX = 0x0000001F,
    M_EMR_SCALEWINDOWEXTEX = 0x00000020,
    M_EMR_SAVEDC = 0x00000021,
    M_EMR_RESTOREDC = 0x00000022,
    M_EMR_SETWORLDTRANSFORM = 0x00000023,
    M_EMR_MODIFYWORLDTRANSFORM = 0x00000024,
    M_EMR_SELECTOBJECT = 0x00000025,
    M_EMR_CREATEPEN = 0x00000026,
    M_EMR_CREATEBRUSHINDIRECT = 0x00000027,
    M_EMR_DELETEOBJECT = 0x00000028,
    M_EMR_ANGLEARC = 0x00000029,
    M_EMR_ELLIPSE = 0x0000002A,
    M_EMR_RECTANGLE = 0x0000002B,
    M_EMR_ROUNDRECT = 0x0000002C,
    M_EMR_ARC = 0x0000002D,
    M_EMR_CHORD = 0x0000002E,
    M_EMR_PIE = 0x0000002F,
    M_EMR_SELECTPALETTE = 0x00000030,
    M_EMR_CREATEPALETTE = 0x00000031,
    M_EMR_SETPALETTEENTRIES = 0x00000032,
    M_EMR_RESIZEPALETTE = 0x00000033,
    M_EMR_REALIZEPALETTE = 0x00000034,
    M_EMR_EXTFLOODFILL = 0x00000035,
    M_EMR_LINETO = 0x00000036,
    M_EMR_ARCTO = 0x00000037,
    M_EMR_POLYDRAW = 0x00000038,
    M_EMR_SETARCDIRECTION = 0x00000039,
    M_EMR_SETMITERLIMIT = 0x0000003A,
    M_EMR_BEGINPATH = 0x0000003B,
    M_EMR_ENDPATH = 0x0000003C,
    M_EMR_CLOSEFIGURE = 0x0000003D,
    M_EMR_FILLPATH = 0x0000003E,
    M_EMR_STROKEANDFILLPATH = 0x0000003F,
    M_EMR_STROKEPATH = 0x00000040,
    M_EMR_FLATTENPATH = 0x00000041,
    M_EMR_WIDENPATH = 0x00000042,
    M_EMR_SELECTCLIPPATH = 0x00000043,
    M_EMR_ABORTPATH = 0x00000044,
    M_EMR_COMMENT = 0x00000046,
    M_EMR_FILLRGN = 0x00000047,
    M_EMR_FRAMERGN = 0x00000048,
    M_EMR_INVERTRGN = 0x00000049,
    M_EMR_PAINTRGN = 0x0000004A,
    M_EMR_EXTSELECTCLIPRGN = 0x0000004B,
    M_EMR_BITBLT = 0x0000004C,
    M_EMR_STRETCHBLT = 0x0000004D,
    M_EMR_MASKBLT = 0x0000004E,
    M_EMR_PLGBLT = 0x0000004F,
    M_EMR_SETDIBITSTODEVICE = 0x00000050,
    M_EMR_STRETCHDIBITS = 0x00000051,
    M_EMR_EXTCREATEFONTINDIRECTW = 0x00000052,
    M_EMR_EXTTEXTOUTA = 0x00000053,
    M_EMR_EXTTEXTOUTW = 0x00000054,
    M_EMR_POLYBEZIER16 = 0x00000055,
    M_EMR_POLYGON16 = 0x00000056,
    M_EMR_POLYLINE16 = 0x00000057,
    M_EMR_POLYBEZIERTO16 = 0x00000058,
    M_EMR_POLYLINETO16 = 0x00000059,
    M_EMR_POLYPOLYLINE16 = 0x0000005A,
    M_EMR_POLYPOLYGON16 = 0x0000005B,
    M_EMR_POLYDRAW16 = 0x0000005C,
    M_EMR_CREATEMONOBRUSH = 0x0000005D,
    M_EMR_CREATEDIBPATTERNBRUSHPT = 0x0000005E,
    M_EMR_EXTCREATEPEN = 0x0000005F,
    M_EMR_POLYTEXTOUTA = 0x00000060,
    M_EMR_POLYTEXTOUTW = 0x00000061,
    M_EMR_SETICMMODE = 0x00000062,
    M_EMR_CREATECOLORSPACE = 0x00000063,
    M_EMR_SETCOLORSPACE = 0x00000064,
    M_EMR_DELETECOLORSPACE = 0x00000065,
    M_EMR_GLSRECORD = 0x00000066,
    M_EMR_GLSBOUNDEDRECORD = 0x00000067,
    M_EMR_PIXELFORMAT = 0x00000068,
    M_EMR_DRAWESCAPE = 0x00000069,
    M_EMR_EXTESCAPE = 0x0000006A,
    M_EMR_SMALLTEXTOUT = 0x0000006C,
    M_EMR_FORCEUFIMAPPING = 0x0000006D,
    M_EMR_NAMEDESCAPE = 0x0000006E,
    M_EMR_COLORCORRECTPALETTE = 0x0000006F,
    M_EMR_SETICMPROFILEA = 0x00000070,
    M_EMR_SETICMPROFILEW = 0x00000071,
    M_EMR_ALPHABLEND = 0x00000072,
    M_EMR_SETLAYOUT = 0x00000073,
    M_EMR_TRANSPARENTBLT = 0x00000074,
    M_EMR_GRADIENTFILL = 0x00000076,
    M_EMR_SETLINKEDUFIS = 0x00000077,
    M_EMR_SETTEXTJUSTIFICATION = 0x00000078,
    M_EMR_COLORMATCHTOTARGETW = 0x00000079,
    M_EMR_CREATECOLORSPACEW = 0x0000007A
} RecordType;

typedef struct _Record_Header {
    uint32_t   type;              // Enhanced metafile record type
    uint32_t   size;              // Length of the record in bytes.
    // This must be a multiple of 4.
} RecordHeader, *PRecordHeader;

typedef struct _EMF_Record {
    uint32_t   type;
    uint32_t   size;
    uint32_t   data[];
} EMFRecord, *PEMFRecord;

typedef struct _EMR_TEXT_OBJECT {
    uint32_t reference[2];
    uint32_t chars;
    uint32_t offstring;
    uint32_t options;
    uint32_t rectangle[4];
    uint32_t offdx;
    uint16_t buf[];
} EMRTextObject, *PEMRTextObject;

typedef struct _EMR_EXTTEXTOUTW {
    uint32_t   type;
    uint32_t   size;
    uint32_t   bounds[4];
    uint32_t   mode;
    uint32_t   exscale;
    uint32_t   eyscale;
    EMRTextObject object;
} EMRExtTextOutW, *PEMRExtTextOutW;